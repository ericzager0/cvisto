-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;

CREATE TYPE proficiency AS ENUM (
  'elementary',
  'limited',
  'professional',
  'full_professional',
  'native'
);

CREATE TABLE IF NOT EXISTS public.cvs
(
    id uuid NOT NULL,
    user_id uuid NOT NULL,
    url text COLLATE pg_catalog."default" NOT NULL,
    title text COLLATE pg_catalog."default" NOT NULL,
    has_photo boolean NOT NULL DEFAULT false,
    created_timestamp timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    modified_timestamp timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT cvs_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.educations
(
    id bigserial NOT NULL,
    user_id uuid NOT NULL,
    school text COLLATE pg_catalog."default" NOT NULL,
    degree text COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default",
    start_date date,
    end_date date,
    CONSTRAINT educations_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.experiences
(
    id bigserial NOT NULL,
    user_id uuid NOT NULL,
    title text COLLATE pg_catalog."default" NOT NULL,
    company text COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default",
    start_date date,
    end_date date,
    CONSTRAINT experiences_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.languages
(
    id bigserial NOT NULL,
    user_id uuid NOT NULL,
    name text COLLATE pg_catalog."default" NOT NULL,
    proficiency proficiency,
    CONSTRAINT languages_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.links
(
    id bigserial NOT NULL,
    link text COLLATE pg_catalog."default" NOT NULL,
    user_id uuid NOT NULL,
    CONSTRAINT links_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.skills
(
    id bigserial NOT NULL,
    skill text COLLATE pg_catalog."default" NOT NULL,
    user_id uuid NOT NULL,
    CONSTRAINT skills_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.users
(
    id uuid NOT NULL DEFAULT gen_random_uuid(),
    first_name text COLLATE pg_catalog."default" NOT NULL,
    last_name text COLLATE pg_catalog."default" NOT NULL,
    email text COLLATE pg_catalog."default" NOT NULL,
    profile_picture text COLLATE pg_catalog."default",
    bio text COLLATE pg_catalog."default",
    phone_number text COLLATE pg_catalog."default",
    location text COLLATE pg_catalog."default",
    CONSTRAINT users_pkey PRIMARY KEY (id),
    CONSTRAINT users_email_key UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS public.projects
(
    id bigserial NOT NULL,
    user_id uuid NOT NULL,
    name text NOT NULL,
    description text,
    start_date date,
    end_date date,
    PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.cvs
    ADD CONSTRAINT cvs_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.educations
    ADD CONSTRAINT educations_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.experiences
    ADD CONSTRAINT experiences_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.languages
    ADD CONSTRAINT languages_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.links
    ADD CONSTRAINT links_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.skills
    ADD CONSTRAINT skills_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.projects
    ADD FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;